//тест шаблона рег выражения. это самостоятельный тест, ему не нужны другие файлы

//http://www.script-coding.com/WSH/RegExp.html
// * Определяет ни одного или несколько символов, стоящих перед ним. Эквивалентно {0,}.
// + Определяет один или несколько символов, стоящих перед ним. Эквивалентно {1,}.
// ? Определяет ни одного или один символ, стоящий перед ним. Эквивалентно {0,1}.
//		Если этот метасимвол идёт непосредственно за конструкциями (*, +, ?, {n}, {n,}, {n,m}), это приводит к некоторому изменению алгоритма поиска по заданному шаблону, что проиллюстрировано примером ниже.

Сообщить("||||||||||||||||||||||||||||||||||||||||||");


СтрокаГдеИщем = " Функция 
| Тест( пар2 = ""аа*а?д:д4/3 33_дол\р8+7"" 
| ,   
| ) Экспорт ; а=1;
|  сообщить(1);
|КонецФункции
|";

к = Символ(34); //кавычка

мПаттерн = Новый Массив;

мПаттерн.Добавить("Функция");
мПаттерн.Добавить("(\s|\n)+");//Пробел или перенос строки. один или более
мПаттерн.Добавить("[A-Za-zА-Яа-я0-9_]+");//имя функции
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить("\(");//скобка

//блок описания параметра. одного.
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить("[A-Za-zА-Яа-я0-9_]+");//имя параметра
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить("=?");//знак "равно". 0 или 1
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить("[A-Za-zА-Яа-я0-9\s\*:\?_\\\+\/"+к+"]*");//значение параметра. 0 или 1
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
//как быть с запятой?
мПаттерн.Добавить(",?");//запятая. 0 или 1
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
//конец блока описания параметра

//как написать поиск повторения блока параметра?

мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить("\)");//скобка
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить("(Экспорт)?");//слово Экспорт. ноль или 1
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более
мПаттерн.Добавить(";?"); //ноль или один
мПаттерн.Добавить("(\s|\n)*");//Пробел или перенос строки. ноль или более

паттерн = "";
Для сч=0 По мПаттерн.Количество()-1 Цикл
	паттерн = паттерн + мПаттерн[сч];
КонецЦикла;
сообщить(паттерн);
РегЭксп = Новый Regex(паттерн);

РегЭксп.IgnoreCase = Истина;
РегЭксп.Multiline = Истина;

Совпадения = РегЭксп.НайтиСовпадения(СтрокаГдеИщем);

Сообщить("Всего совпадений "+Совпадения.Количество() );
Сообщить("----------------------------------");

Для каждого Совпадение Из Совпадения Цикл
	сообщить("значение " + Совпадение.Значение);
	сообщить("индекс " + Совпадение.Индекс);
	сообщить("длина " + Совпадение.Длина);
	
	//ВывестиГруппыРегВыражения(Совпадение);

	Сообщить("----------------------------------");

КонецЦикла;


